
fnd_0000_9999_timer_ksm_0709.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  000002b4  00000348  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  0080010e  0080010e  00000356  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000358  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00000ab0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000656  00000000  00000000  00000b50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000162  00000000  00000000  000011a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003cc  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  000016d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000012b  00000000  00000000  000016f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001823  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
   8:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
   c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  10:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  14:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  18:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  1c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  20:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  24:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  28:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  2c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  30:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  34:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  38:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  3c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  40:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  44:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  48:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  4c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  50:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  54:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  58:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  5c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  60:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  64:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  68:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  6c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  70:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  74:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  78:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  7c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  80:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  84:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  88:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 eb       	ldi	r30, 0xB4	; 180
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 30       	cpi	r26, 0x0E	; 14
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	1b be       	out	0x3b, r1	; 59

000000b4 <__do_clear_bss>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	ae e0       	ldi	r26, 0x0E	; 14
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	01 c0       	rjmp	.+2      	; 0xbe <.do_clear_bss_start>

000000bc <.do_clear_bss_loop>:
  bc:	1d 92       	st	X+, r1

000000be <.do_clear_bss_start>:
  be:	a2 32       	cpi	r26, 0x22	; 34
  c0:	b1 07       	cpc	r27, r17
  c2:	e1 f7       	brne	.-8      	; 0xbc <.do_clear_bss_loop>
  c4:	0e 94 68 00 	call	0xd0	; 0xd0 <main>
  c8:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <_exit>

000000cc <__bad_interrupt>:
  cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d0 <main>:
unsigned char digit[10] = {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90};
unsigned char latch[4] = { 0x01, 0x02, 0x04, 0x08};
long unsigned int count = 0, fnd1, fnd10, fnd100, fnd1000;

int main(){
	DDRD = 0xff;
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	81 bb       	out	0x11, r24	; 17
	DDRE = 0x0f;
  d4:	8f e0       	ldi	r24, 0x0F	; 15
  d6:	82 b9       	out	0x02, r24	; 2

	while (1){

		fnd1 = (count/10)%10;
  d8:	8a e0       	ldi	r24, 0x0A	; 10
  da:	88 2e       	mov	r8, r24
  dc:	91 2c       	mov	r9, r1
  de:	a1 2c       	mov	r10, r1
  e0:	b1 2c       	mov	r11, r1
		fnd10 = (count/100) % 10;
  e2:	94 e6       	ldi	r25, 0x64	; 100
  e4:	29 2e       	mov	r2, r25
  e6:	31 2c       	mov	r3, r1
  e8:	41 2c       	mov	r4, r1
  ea:	51 2c       	mov	r5, r1
	DDRD = 0xff;
	DDRE = 0x0f;

	while (1){

		fnd1 = (count/10)%10;
  ec:	c0 90 0e 01 	lds	r12, 0x010E
  f0:	d0 90 0f 01 	lds	r13, 0x010F
  f4:	e0 90 10 01 	lds	r14, 0x0110
  f8:	f0 90 11 01 	lds	r15, 0x0111
  fc:	c7 01       	movw	r24, r14
  fe:	b6 01       	movw	r22, r12
 100:	a5 01       	movw	r20, r10
 102:	94 01       	movw	r18, r8
 104:	0e 94 36 01 	call	0x26c	; 0x26c <__udivmodsi4>
 108:	ca 01       	movw	r24, r20
 10a:	b9 01       	movw	r22, r18
 10c:	a5 01       	movw	r20, r10
 10e:	94 01       	movw	r18, r8
 110:	0e 94 36 01 	call	0x26c	; 0x26c <__udivmodsi4>
 114:	dc 01       	movw	r26, r24
 116:	cb 01       	movw	r24, r22
 118:	3c 01       	movw	r6, r24
 11a:	80 93 1e 01 	sts	0x011E, r24
 11e:	90 93 1f 01 	sts	0x011F, r25
 122:	a0 93 20 01 	sts	0x0120, r26
 126:	b0 93 21 01 	sts	0x0121, r27
		fnd10 = (count/100) % 10;
 12a:	c7 01       	movw	r24, r14
 12c:	b6 01       	movw	r22, r12
 12e:	a2 01       	movw	r20, r4
 130:	91 01       	movw	r18, r2
 132:	0e 94 36 01 	call	0x26c	; 0x26c <__udivmodsi4>
 136:	ca 01       	movw	r24, r20
 138:	b9 01       	movw	r22, r18
 13a:	a5 01       	movw	r20, r10
 13c:	94 01       	movw	r18, r8
 13e:	0e 94 36 01 	call	0x26c	; 0x26c <__udivmodsi4>
 142:	dc 01       	movw	r26, r24
 144:	cb 01       	movw	r24, r22
 146:	8c 01       	movw	r16, r24
 148:	80 93 1a 01 	sts	0x011A, r24
 14c:	90 93 1b 01 	sts	0x011B, r25
 150:	a0 93 1c 01 	sts	0x011C, r26
 154:	b0 93 1d 01 	sts	0x011D, r27
		fnd100 = (count/1000) % 10;
 158:	c7 01       	movw	r24, r14
 15a:	b6 01       	movw	r22, r12
 15c:	28 ee       	ldi	r18, 0xE8	; 232
 15e:	33 e0       	ldi	r19, 0x03	; 3
 160:	40 e0       	ldi	r20, 0x00	; 0
 162:	50 e0       	ldi	r21, 0x00	; 0
 164:	0e 94 36 01 	call	0x26c	; 0x26c <__udivmodsi4>
 168:	ca 01       	movw	r24, r20
 16a:	b9 01       	movw	r22, r18
 16c:	a5 01       	movw	r20, r10
 16e:	94 01       	movw	r18, r8
 170:	0e 94 36 01 	call	0x26c	; 0x26c <__udivmodsi4>
 174:	dc 01       	movw	r26, r24
 176:	cb 01       	movw	r24, r22
 178:	ec 01       	movw	r28, r24
 17a:	80 93 16 01 	sts	0x0116, r24
 17e:	90 93 17 01 	sts	0x0117, r25
 182:	a0 93 18 01 	sts	0x0118, r26
 186:	b0 93 19 01 	sts	0x0119, r27
		fnd1000 = (count/10000) % 10;
 18a:	c7 01       	movw	r24, r14
 18c:	b6 01       	movw	r22, r12
 18e:	20 e1       	ldi	r18, 0x10	; 16
 190:	37 e2       	ldi	r19, 0x27	; 39
 192:	40 e0       	ldi	r20, 0x00	; 0
 194:	50 e0       	ldi	r21, 0x00	; 0
 196:	0e 94 36 01 	call	0x26c	; 0x26c <__udivmodsi4>
 19a:	ca 01       	movw	r24, r20
 19c:	b9 01       	movw	r22, r18
 19e:	a5 01       	movw	r20, r10
 1a0:	94 01       	movw	r18, r8
 1a2:	0e 94 36 01 	call	0x26c	; 0x26c <__udivmodsi4>
 1a6:	dc 01       	movw	r26, r24
 1a8:	cb 01       	movw	r24, r22
 1aa:	fc 01       	movw	r30, r24
 1ac:	80 93 12 01 	sts	0x0112, r24
 1b0:	90 93 13 01 	sts	0x0113, r25
 1b4:	a0 93 14 01 	sts	0x0114, r26
 1b8:	b0 93 15 01 	sts	0x0115, r27
		count++;
 1bc:	08 94       	sec
 1be:	c1 1c       	adc	r12, r1
 1c0:	d1 1c       	adc	r13, r1
 1c2:	e1 1c       	adc	r14, r1
 1c4:	f1 1c       	adc	r15, r1
 1c6:	c0 92 0e 01 	sts	0x010E, r12
 1ca:	d0 92 0f 01 	sts	0x010F, r13
 1ce:	e0 92 10 01 	sts	0x0110, r14
 1d2:	f0 92 11 01 	sts	0x0111, r15
		PORTE = latch[0], PORTD = digit[fnd1], _delay_ms(2.5);
 1d6:	80 91 00 01 	lds	r24, 0x0100
 1da:	83 b9       	out	0x03, r24	; 3
 1dc:	84 e0       	ldi	r24, 0x04	; 4
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	68 0e       	add	r6, r24
 1e2:	79 1e       	adc	r7, r25
 1e4:	d3 01       	movw	r26, r6
 1e6:	8c 91       	ld	r24, X
 1e8:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ea:	8f e0       	ldi	r24, 0x0F	; 15
 1ec:	97 e2       	ldi	r25, 0x27	; 39
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <main+0x11e>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <main+0x124>
 1f4:	00 00       	nop
		PORTE = latch[1], PORTD = digit[fnd10], _delay_ms(2.5);
 1f6:	80 91 01 01 	lds	r24, 0x0101
 1fa:	83 b9       	out	0x03, r24	; 3
 1fc:	0c 5f       	subi	r16, 0xFC	; 252
 1fe:	1e 4f       	sbci	r17, 0xFE	; 254
 200:	d8 01       	movw	r26, r16
 202:	8c 91       	ld	r24, X
 204:	82 bb       	out	0x12, r24	; 18
 206:	8f e0       	ldi	r24, 0x0F	; 15
 208:	97 e2       	ldi	r25, 0x27	; 39
 20a:	01 97       	sbiw	r24, 0x01	; 1
 20c:	f1 f7       	brne	.-4      	; 0x20a <main+0x13a>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0x140>
 210:	00 00       	nop
		PORTE = latch[2], PORTD = digit[fnd100], _delay_ms(2.5);
 212:	80 91 02 01 	lds	r24, 0x0102
 216:	83 b9       	out	0x03, r24	; 3
 218:	cc 5f       	subi	r28, 0xFC	; 252
 21a:	de 4f       	sbci	r29, 0xFE	; 254
 21c:	88 81       	ld	r24, Y
 21e:	82 bb       	out	0x12, r24	; 18
 220:	af e0       	ldi	r26, 0x0F	; 15
 222:	b7 e2       	ldi	r27, 0x27	; 39
 224:	11 97       	sbiw	r26, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <main+0x154>
 228:	00 c0       	rjmp	.+0      	; 0x22a <main+0x15a>
 22a:	00 00       	nop
		PORTE = latch[3], PORTD = digit[fnd1000], _delay_ms(2.5);
 22c:	80 91 03 01 	lds	r24, 0x0103
 230:	83 b9       	out	0x03, r24	; 3
 232:	ec 5f       	subi	r30, 0xFC	; 252
 234:	fe 4f       	sbci	r31, 0xFE	; 254
 236:	80 81       	ld	r24, Z
 238:	82 bb       	out	0x12, r24	; 18
 23a:	8f e0       	ldi	r24, 0x0F	; 15
 23c:	97 e2       	ldi	r25, 0x27	; 39
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <main+0x16e>
 242:	00 c0       	rjmp	.+0      	; 0x244 <main+0x174>
 244:	00 00       	nop
		if (count == 100000) count = 0;
 246:	90 ea       	ldi	r25, 0xA0	; 160
 248:	c9 16       	cp	r12, r25
 24a:	96 e8       	ldi	r25, 0x86	; 134
 24c:	d9 06       	cpc	r13, r25
 24e:	91 e0       	ldi	r25, 0x01	; 1
 250:	e9 06       	cpc	r14, r25
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	f9 06       	cpc	r15, r25
 256:	09 f0       	breq	.+2      	; 0x25a <main+0x18a>
 258:	49 cf       	rjmp	.-366    	; 0xec <main+0x1c>
 25a:	10 92 0e 01 	sts	0x010E, r1
 25e:	10 92 0f 01 	sts	0x010F, r1
 262:	10 92 10 01 	sts	0x0110, r1
 266:	10 92 11 01 	sts	0x0111, r1
 26a:	40 cf       	rjmp	.-384    	; 0xec <main+0x1c>

0000026c <__udivmodsi4>:
 26c:	a1 e2       	ldi	r26, 0x21	; 33
 26e:	1a 2e       	mov	r1, r26
 270:	aa 1b       	sub	r26, r26
 272:	bb 1b       	sub	r27, r27
 274:	fd 01       	movw	r30, r26
 276:	0d c0       	rjmp	.+26     	; 0x292 <__udivmodsi4_ep>

00000278 <__udivmodsi4_loop>:
 278:	aa 1f       	adc	r26, r26
 27a:	bb 1f       	adc	r27, r27
 27c:	ee 1f       	adc	r30, r30
 27e:	ff 1f       	adc	r31, r31
 280:	a2 17       	cp	r26, r18
 282:	b3 07       	cpc	r27, r19
 284:	e4 07       	cpc	r30, r20
 286:	f5 07       	cpc	r31, r21
 288:	20 f0       	brcs	.+8      	; 0x292 <__udivmodsi4_ep>
 28a:	a2 1b       	sub	r26, r18
 28c:	b3 0b       	sbc	r27, r19
 28e:	e4 0b       	sbc	r30, r20
 290:	f5 0b       	sbc	r31, r21

00000292 <__udivmodsi4_ep>:
 292:	66 1f       	adc	r22, r22
 294:	77 1f       	adc	r23, r23
 296:	88 1f       	adc	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	1a 94       	dec	r1
 29c:	69 f7       	brne	.-38     	; 0x278 <__udivmodsi4_loop>
 29e:	60 95       	com	r22
 2a0:	70 95       	com	r23
 2a2:	80 95       	com	r24
 2a4:	90 95       	com	r25
 2a6:	9b 01       	movw	r18, r22
 2a8:	ac 01       	movw	r20, r24
 2aa:	bd 01       	movw	r22, r26
 2ac:	cf 01       	movw	r24, r30
 2ae:	08 95       	ret

000002b0 <_exit>:
 2b0:	f8 94       	cli

000002b2 <__stop_program>:
 2b2:	ff cf       	rjmp	.-2      	; 0x2b2 <__stop_program>
